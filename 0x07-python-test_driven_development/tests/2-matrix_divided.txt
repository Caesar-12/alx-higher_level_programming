"""
def matrix_divided(matrix, div):
Function that divides every element in a matrix
-> matrix must be a list of lists of integers or floats, otherwise raise a TypeError exception with the message matrix must be a matrix (list of lists) of integers/floats
-> Each row of the matrix must be of the same size, otherwise raise a TypeError exception with the message Each row of the matrix must have the same size
-> div must be a number (integer or float), otherwise raise a TypeError exception with the message div must be a number
-> div canâ€™t be equal to 0, otherwise raise a ZeroDivisionError exception with the message division by zero
-> All elements of the matrix should be divided by div, rounded to 2 decimal places
-> Returns a new matrix

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = matrix = [
...    [1, 2, 3],
...    [4, 5, 6]
...	]
...
>>> 
>>> matrixx = [
...    [1, 'g', 3],
...    [4, 5, 6]
...	]
...
>>> 
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>>
>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]
>>>
>>> print(matrix_divided(matrixx, 3))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>>
>>> matrixu = [
...    [1, 3],
...    [4, 5, 6]
...	]
...
>>>
>>> print(matrix_divided(matrixu, 3))
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size
>>>
>>> print(matrix_divided(matrix, 'u'))
Traceback (most recent call last):
...
TypeError: div must be a number
>>>
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
>>> 
