"""
Doctest
Function prrototype: def add_integer(a, b=98):
a and b must be integers or floats, otherwise raise a TypeError exception with the message/
"a must be an integer" or "b must be an integer"
a and b must be first casted to integers if they are float
Returns an integer: the addition of a and b

Both values are +ve integers
>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(1, 2)
3

A +ve ad a -ve interger
>>> add_integer(100, -2)
98

Only 'a' is given
>>> add_integer(2)
100

A float type value 
>>> add_integer(100.3, -2)
98

A string value
>>> add_integer(4, "School")
Traceback (most recent call last):
...
TypeError: b must be an integer

None value passed
>>> add_integer(None)
Traceback (most recent call last):
...
TypeError: a must be an integer

string value passed to 'a'
>>> add_integer("str")
Traceback (most recent call last):
...
TypeError: a must be an integer

more than 2 arguments passed
>>> add_integer(2, 4, 6)
Traceback (most recent call last):
...
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

